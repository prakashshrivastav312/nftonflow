{"ast":null,"code":"export const getNFTsScript = `\nimport Nu10NFT from 0xbfffa6d5a50e9adc\nimport NonFungibleToken from 0x631e88ae7f1d7c20\n\npub fun main(account: Address): [&Nu10NFT.NFT] {\n  let collection = getAccount(account).getCapability(/public/MyNFTCollection)\n                    .borrow<&Nu10NFT.Collection{NonFungibleToken.CollectionPublic, Nu10NFT.CollectionPublic}>()\n                    ?? panic(\"Can't get the User's collection.\")\n\n  let returnVals: [&Nu10NFT.NFT] = []\n\n  let ids = collection.getIDs()\n  for id in ids {\n    returnVals.append(collection.borrowEntireNFT(id: id))\n  }\n\n  return returnVals\n}\n`;","map":{"version":3,"sources":["/home/prakash/nu10nftflow/src/cadence/scripts/get_nfts.js"],"names":["getNFTsScript"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO","sourcesContent":["export const getNFTsScript = `\nimport Nu10NFT from 0xbfffa6d5a50e9adc\nimport NonFungibleToken from 0x631e88ae7f1d7c20\n\npub fun main(account: Address): [&Nu10NFT.NFT] {\n  let collection = getAccount(account).getCapability(/public/MyNFTCollection)\n                    .borrow<&Nu10NFT.Collection{NonFungibleToken.CollectionPublic, Nu10NFT.CollectionPublic}>()\n                    ?? panic(\"Can't get the User's collection.\")\n\n  let returnVals: [&Nu10NFT.NFT] = []\n\n  let ids = collection.getIDs()\n  for id in ids {\n    returnVals.append(collection.borrowEntireNFT(id: id))\n  }\n\n  return returnVals\n}\n`"]},"metadata":{},"sourceType":"module"}