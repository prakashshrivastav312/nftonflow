{"ast":null,"code":"var _jsxFileName = \"/home/prakash/nftdapp-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Collection from \"./Collection.js\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { useState, useEffect } from 'react';\nimport { create } from 'ipfs-http-client';\nimport { mintNFT } from \"./cadence/transactions/mint_nft.js\";\nimport { setupUserTx } from \"./cadence/transactions/setup_user.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\nfcl.config().put(\"accessNode.api\", \"https://access-testnet.onflow.org\").put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\");\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [nameOfNFT, setNameOfNFT] = useState('');\n  const [file, setFile] = useState();\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, []);\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n  };\n\n  const mint = async () => {\n    try {\n      const added = await client.add(file);\n      const hash = added.path;\n      const transactionId = await fcl.send([fcl.transaction(mintNFT), fcl.args([fcl.arg(hash, t.String), fcl.arg(nameOfNFT, t.String)]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    }\n  };\n\n  const setupUser = async () => {\n    const transactionId = await fcl.send([fcl.transaction(setupUserTx), fcl.args([]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Account address: \", user && user.addr ? user.addr : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => logIn(),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fcl.unauthenticate(),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setupUser(),\n      children: \"Setup User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNameOfNFT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => mint(),\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QiTS4l5Chmvk1+KFHEY0mJEU4tI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/prakash/nftdapp-tutorial/src/App.js"],"names":["Collection","fcl","t","useState","useEffect","create","mintNFT","setupUserTx","client","config","put","App","user","setUser","nameOfNFT","setNameOfNFT","file","setFile","currentUser","subscribe","logIn","authenticate","mint","added","add","hash","path","transactionId","send","transaction","args","arg","String","payer","authz","proposer","authorizations","limit","then","decode","console","log","tx","onceSealed","error","setupUser","addr","unauthenticate","e","target","value","files"],"mappings":"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","sourcesContent":["import './App.css';\n\n\nimport Collection from \"./Collection.js\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport {useState, useEffect} from 'react';\nimport {create} from 'ipfs-http-client';\nimport {mintNFT} from \"./cadence/transactions/mint_nft.js\";\nimport {setupUserTx} from \"./cadence/transactions/setup_user.js\";\n\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfcl.config()\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\")\n  .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\")\n\nfunction App() {\n  const [user, setUser] = useState();\n  const [nameOfNFT, setNameOfNFT] = useState('');\n  const [file, setFile] = useState();\n \n\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, [])\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n  }\n\n  const mint = async () => {\n\n    try {\n      const added = await client.add(file)\n      const hash = added.path;\n\n      const transactionId = await fcl.send([\n        fcl.transaction(mintNFT),\n        fcl.args([\n          fcl.arg(hash, t.String),\n          fcl.arg(nameOfNFT, t.String)\n        ]),\n        fcl.payer(fcl.authz),\n        fcl.proposer(fcl.authz),\n        fcl.authorizations([fcl.authz]),\n        fcl.limit(9999)\n      ]).then(fcl.decode);\n  \n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n    } catch(error) {\n      console.log('Error uploading file: ', error);\n    }\n  }\n\n  const setupUser = async () => {\n    const transactionId = await fcl.send([\n      fcl.transaction(setupUserTx),\n      fcl.args([]),\n      fcl.payer(fcl.authz),\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.limit(9999)\n    ]).then(fcl.decode);\n\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  }\n\n  \n\n \n\n  return (\n    <div className=\"App\">\n      <h1>Account address: {user && user.addr ? user.addr : ''}</h1>\n      <button onClick={() => logIn()}>Log In</button>\n      <button onClick={() => fcl.unauthenticate()}>Log Out</button>\n      <button onClick={() => setupUser()}>Setup User</button>\n\n      \n\n      <div>\n        <input type=\"text\" onChange={(e) => setNameOfNFT(e.target.value)} />\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n        <button onClick={() => mint()}>Mint</button>\n      </div>\n\n      \n      <Collection ></Collection>\n      \n\n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}