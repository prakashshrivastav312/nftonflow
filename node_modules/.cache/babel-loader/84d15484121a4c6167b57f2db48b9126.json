{"ast":null,"code":"export const setupUserTx = `\nimport Nu10NFT from 0xbfffa6d5a50e9adc\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport FungibleToken from 0xbfffa6d5a50e9adc\nimport FlowToken from 0xbfffa6d5a50e9adc\nimport NFTMarketplace from 0xbfffa6d5a50e9adc\n\ntransaction {\n\n  prepare(acct: AuthAccount) {\n    acct.save(<- Nu10NFT.createEmptyCollection(), to: /storage/MyNFTCollection)\n    acct.link<&Nu10NFT.Collection{Nu10NFT.CollectionPublic, NonFungibleToken.CollectionPublic}>(/public/MyNFTCollection, target: /storage/MyNFTCollection)\n    acct.link<&Nu10NFT.Collection>(/private/MyNFTCollection, target: /storage/MyNFTCollection)\n    \n    let MyNFTCollection = acct.getCapability<&Nu10NFT.Collection>(/private/MyNFTCollection)\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\n\n    acct.save(<- NFTMarketplace.createSaleCollection(MyNFTCollection: MyNFTCollection, FlowTokenVault: FlowTokenVault), to: /storage/MySaleCollection)\n    acct.link<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>(/public/MySaleCollection, target: /storage/MySaleCollection)\n  }\n\n  execute {\n    log(\"A user stored a Collection and a SaleCollection inside their account\")\n  }\n}\n\n`;","map":{"version":3,"sources":["/home/prakash/nftdapp-tutorial/src/cadence/transactions/setup_user.js"],"names":["setupUserTx"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO","sourcesContent":["export const setupUserTx = `\nimport Nu10NFT from 0xbfffa6d5a50e9adc\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport FungibleToken from 0xbfffa6d5a50e9adc\nimport FlowToken from 0xbfffa6d5a50e9adc\nimport NFTMarketplace from 0xbfffa6d5a50e9adc\n\ntransaction {\n\n  prepare(acct: AuthAccount) {\n    acct.save(<- Nu10NFT.createEmptyCollection(), to: /storage/MyNFTCollection)\n    acct.link<&Nu10NFT.Collection{Nu10NFT.CollectionPublic, NonFungibleToken.CollectionPublic}>(/public/MyNFTCollection, target: /storage/MyNFTCollection)\n    acct.link<&Nu10NFT.Collection>(/private/MyNFTCollection, target: /storage/MyNFTCollection)\n    \n    let MyNFTCollection = acct.getCapability<&Nu10NFT.Collection>(/private/MyNFTCollection)\n    let FlowTokenVault = acct.getCapability<&FlowToken.Vault{FungibleToken.Receiver}>(/public/flowTokenReceiver)\n\n    acct.save(<- NFTMarketplace.createSaleCollection(MyNFTCollection: MyNFTCollection, FlowTokenVault: FlowTokenVault), to: /storage/MySaleCollection)\n    acct.link<&NFTMarketplace.SaleCollection{NFTMarketplace.SaleCollectionPublic}>(/public/MySaleCollection, target: /storage/MySaleCollection)\n  }\n\n  execute {\n    log(\"A user stored a Collection and a SaleCollection inside their account\")\n  }\n}\n\n`"]},"metadata":{},"sourceType":"module"}