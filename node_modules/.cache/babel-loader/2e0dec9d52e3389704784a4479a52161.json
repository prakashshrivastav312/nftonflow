{"ast":null,"code":"var _jsxFileName = \"/home/prakash/nftdapp-tutorial/src/Collection.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { useState, useEffect } from 'react';\nimport { getNFTsScript } from \"./cadence/scripts/get_nfts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Collection(props) {\n  _s();\n\n  const [nfts, setNFTs] = useState([]);\n  useEffect(() => {\n    getUserNFTs();\n  }, []);\n\n  const getUserNFTs = async () => {\n    const result = await fcl.send([fcl.script(getNFTsScript), fcl.args([fcl.arg(props.address, t.Address)])]).then(fcl.decode);\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: nfts.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nft.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: nft.metadata.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, nft.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Collection, \"7phIsx6Y0qCXkIWOSGOTifNBFYQ=\");\n\n_c = Collection;\nexport default Collection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"sources":["/home/prakash/nftdapp-tutorial/src/Collection.js"],"names":["fcl","t","useState","useEffect","getNFTsScript","Collection","props","nfts","setNFTs","getUserNFTs","result","send","script","args","arg","address","Address","then","decode","console","log","map","nft","id","metadata","name"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,aAAR,QAA4B,+BAA5B;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMV,GAAG,CAACW,IAAJ,CAAS,CAC1BX,GAAG,CAACY,MAAJ,CAAWR,aAAX,CAD0B,EAE1BJ,GAAG,CAACa,IAAJ,CAAS,CACLb,GAAG,CAACc,GAAJ,CAAQR,KAAK,CAACS,OAAd,EAAuBd,CAAC,CAACe,OAAzB,CADK,CAAT,CAF0B,CAAT,EAKlBC,IALkB,CAKbjB,GAAG,CAACkB,MALS,CAArB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEH,GAVD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACCH,IAAI,CAACc,GAAL,CAASC,GAAG,iBACT;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBAAKD,GAAG,CAACE,QAAJ,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAUH,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BQlB,U;;KAAAA,U;AAiCT,eAAeA,UAAf","sourcesContent":["import './App.css';\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport {useState, useEffect} from 'react';\nimport {getNFTsScript} from \"./cadence/scripts/get_nfts.js\";\n\n\nfunction Collection(props) {\n  const [nfts, setNFTs] = useState([]);\n\n  useEffect(() => {\n    getUserNFTs();\n  }, [])\n\n  const getUserNFTs = async () => {\n      const result = await fcl.send([\n          fcl.script(getNFTsScript),\n          fcl.args([\n              fcl.arg(props.address, t.Address)\n          ])\n      ]).then(fcl.decode);\n\n      console.log(result);\n      \n  }\n \n \n  return (\n    <div className='App'>\n    {nfts.map(nft => (\n        <div key={nft.id}>\n            <h1>{nft.id}</h1>\n            {/* <img style={{width: \"100px\"}} src={`https://ipfs.infura.io/ipfs/${nft.ipfsHash}`} /> */}\n            <h1>{nft.metadata.name}</h1>\n        </div>\n    ))}\n  </div>\n  );\n}\n\nexport default Collection;"]},"metadata":{},"sourceType":"module"}