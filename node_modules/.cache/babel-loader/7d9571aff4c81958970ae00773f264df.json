{"ast":null,"code":"var _jsxFileName = \"/home/prakash/nftdapp-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Collection from \"./Collection.js\";\nimport SaleCollection from \"./SaleCollection.js\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { useState, useEffect } from 'react';\nimport { create } from 'ipfs-http-client';\nimport { mintNFT } from \"./cadence/transactions/mint_nft.js\";\nimport { setupUserTx } from \"./cadence/transactions/setup_user.js\";\nimport { listForSaleTx } from \"./cadence/transactions/list_for_sale.js\";\nimport { unlistFromSaleTx } from \"./cadence/transactions/unlist_from_sale.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = create('https://ipfs.infura.io:5001/api/v0');\nfcl.config().put(\"accessNode.api\", \"https://access-testnet.onflow.org\").put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\");\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [nameOfNFT, setNameOfNFT] = useState('');\n  const [file, setFile] = useState();\n  const [id, setID] = useState();\n  const [price, setPrice] = useState();\n  const [address, setAddress] = useState();\n  const [officialAddress, setOfficialAddress] = useState('');\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, []);\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n  };\n\n  const mint = async () => {\n    try {\n      const added = await client.add(file);\n      const hash = added.path;\n      const transactionId = await fcl.send([fcl.transaction(mintNFT), fcl.args([fcl.arg(hash, t.String), fcl.arg(nameOfNFT, t.String)]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    }\n  };\n\n  const setupUser = async () => {\n    const transactionId = await fcl.send([fcl.transaction(setupUserTx), fcl.args([]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  };\n\n  const listForSale = async () => {\n    const transactionId = await fcl.send([fcl.transaction(listForSaleTx), fcl.args([fcl.arg(parseInt(id), t.UInt64), fcl.arg(price, t.UFix64)]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  };\n\n  const unlistFromSale = async () => {\n    const transactionId = await fcl.send([fcl.transaction(unlistFromSaleTx), fcl.args([fcl.arg(parseInt(id), t.UInt64)]), fcl.payer(fcl.authz), fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(9999)]).then(fcl.decode);\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Account address: \", user && user.addr ? user.addr : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => logIn(),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fcl.unauthenticate(),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setupUser(),\n      children: \"Setup User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOfficialAddress(address),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNameOfNFT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => mint(),\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => listForSale(),\n        children: \"Lift NFT for Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => unlistFromSale(),\n        children: \"Unlist an NFT from Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), user && user.addr && officialAddress && officialAddress !== '' ? /*#__PURE__*/_jsxDEV(Collection, {\n      address: officialAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : null, user && user.addr && officialAddress && officialAddress !== '' ? /*#__PURE__*/_jsxDEV(SaleCollection, {\n      address: officialAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vpWlQ2RgSM8YipJAevGjb6ZhP/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/prakash/nftdapp-tutorial/src/App.js"],"names":["Collection","SaleCollection","fcl","t","useState","useEffect","create","mintNFT","setupUserTx","listForSaleTx","unlistFromSaleTx","client","config","put","App","user","setUser","nameOfNFT","setNameOfNFT","file","setFile","id","setID","price","setPrice","address","setAddress","officialAddress","setOfficialAddress","currentUser","subscribe","logIn","authenticate","mint","added","add","hash","path","transactionId","send","transaction","args","arg","String","payer","authz","proposer","authorizations","limit","then","decode","console","log","tx","onceSealed","error","setupUser","listForSale","parseInt","UInt64","UFix64","unlistFromSale","addr","unauthenticate","e","target","value","files"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport Collection from \"./Collection.js\";\nimport SaleCollection from \"./SaleCollection.js\";\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport {useState, useEffect} from 'react';\nimport {create} from 'ipfs-http-client';\nimport {mintNFT} from \"./cadence/transactions/mint_nft.js\";\nimport {setupUserTx} from \"./cadence/transactions/setup_user.js\";\nimport {listForSaleTx} from \"./cadence/transactions/list_for_sale.js\";\nimport {unlistFromSaleTx} from \"./cadence/transactions/unlist_from_sale.js\";\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfcl.config()\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\")\n  .put(\"discovery.wallet\", \"https://fcl-discovery.onflow.org/testnet/authn\")\n\nfunction App() {\n  const [user, setUser] = useState();\n  const [nameOfNFT, setNameOfNFT] = useState('');\n  const [file, setFile] = useState();\n  const [id, setID] = useState();\n  const [price, setPrice] = useState();\n  const [address, setAddress] = useState();\n  const [officialAddress, setOfficialAddress] = useState('');\n\n  useEffect(() => {\n    // sets the `user` variable to the person that is logged in through Blocto\n    fcl.currentUser().subscribe(setUser);\n  }, [])\n\n  const logIn = () => {\n    // log in through Blocto\n    fcl.authenticate();\n  }\n\n  const mint = async () => {\n\n    try {\n      const added = await client.add(file)\n      const hash = added.path;\n\n      const transactionId = await fcl.send([\n        fcl.transaction(mintNFT),\n        fcl.args([\n          fcl.arg(hash, t.String),\n          fcl.arg(nameOfNFT, t.String)\n        ]),\n        fcl.payer(fcl.authz),\n        fcl.proposer(fcl.authz),\n        fcl.authorizations([fcl.authz]),\n        fcl.limit(9999)\n      ]).then(fcl.decode);\n  \n      console.log(transactionId);\n      return fcl.tx(transactionId).onceSealed();\n    } catch(error) {\n      console.log('Error uploading file: ', error);\n    }\n  }\n\n  const setupUser = async () => {\n    const transactionId = await fcl.send([\n      fcl.transaction(setupUserTx),\n      fcl.args([]),\n      fcl.payer(fcl.authz),\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.limit(9999)\n    ]).then(fcl.decode);\n\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  }\n\n  const listForSale = async () => {\n    const transactionId = await fcl.send([\n      fcl.transaction(listForSaleTx),\n      fcl.args([\n        fcl.arg(parseInt(id), t.UInt64),\n        fcl.arg(price, t.UFix64)\n      ]),\n      fcl.payer(fcl.authz),\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.limit(9999)\n    ]).then(fcl.decode);\n\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  }\n\n  const unlistFromSale = async () => {\n    const transactionId = await fcl.send([\n      fcl.transaction(unlistFromSaleTx),\n      fcl.args([\n        fcl.arg(parseInt(id), t.UInt64)\n      ]),\n      fcl.payer(fcl.authz),\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.limit(9999)\n    ]).then(fcl.decode);\n\n    console.log(transactionId);\n    return fcl.tx(transactionId).onceSealed();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Account address: {user && user.addr ? user.addr : ''}</h1>\n      <button onClick={() => logIn()}>Log In</button>\n      <button onClick={() => fcl.unauthenticate()}>Log Out</button>\n      <button onClick={() => setupUser()}>Setup User</button>\n\n      <div>\n        <input type=\"text\" onChange={(e) => setAddress(e.target.value)} />\n        <button onClick={() => setOfficialAddress(address)}>Search</button>\n      </div>\n\n      <div>\n        <input type=\"text\" onChange={(e) => setNameOfNFT(e.target.value)} />\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n        <button onClick={() => mint()}>Mint</button>\n      </div>\n\n      <div>\n        <input type=\"text\" onChange={(e) => setID(e.target.value)} />\n        <input type=\"text\" onChange={(e) => setPrice(e.target.value)} />\n        <button onClick={() => listForSale()}>Lift NFT for Sale</button>\n        <button onClick={() => unlistFromSale()}>Unlist an NFT from Sale</button>\n      </div>\n\n      { user && user.addr && officialAddress && officialAddress !== ''\n        ?\n        <Collection address={officialAddress}></Collection>\n        :\n        null\n      }\n\n      { user && user.addr && officialAddress && officialAddress !== ''\n        ?\n        <SaleCollection address={officialAddress}></SaleCollection>\n        :\n        null\n      }\n      \n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}